#!/bin/bash

export ORACLE_SID=$(ps -ef | grep pmon | grep ASM | awk '{match($NF, /\+ASM[0-9]*/); print substr($NF, RSTART, RLENGTH)}')
export ORACLE_HOME=$(awk -F: -v sid="$ORACLE_SID" '$1 == sid {print $2}' /etc/oratab)
export PATH=$PATH:$ORACLE_HOME/bin
MASTER_LOG="{{ done_dir }}/dataguard_precheck.log"
FAILURE_LOG="{{ done_dir }}/failure_check.log"

# Ensure log files are empty before running
> "$MASTER_LOG"
> "$FAILURE_LOG"

# Input variables
file_dest="{{ databases[database_name].file_dest }}"
online_log_dest1="{{ databases[database_name].online_log_dest1 }}"
db_recovery_file_dest="{{ databases[database_name].db_recovery_file_dest }}"
db_size="{{ db_size }}"  # Required database size

check_existence() {
    local dg=$1
    local dg_name="'${dg#+}'"
    echo "Checking existence of Disk Group or Filesystem: $dg" | tee -a "$MASTER_LOG"
    
    if [[ "$dg" == +* ]]; then
        # ASM Disk Group Existence Check
        exist_check=$(su - {{ grid_user }} -c "sqlplus -s / as sysdba" <<SQL | tee -a "$MASTER_LOG"
SET HEADING OFF
SET FEEDBACK OFF
SET PAGESIZE 0
SELECT COUNT(*) FROM v\$asm_diskgroup WHERE name=UPPER($dg_name);
EXIT;
SQL
)
        sql_exit_status=$?
        if [[ $sql_exit_status -ne 0 ]]; then
            echo "Error: SQL command failed with exit status $sql_exit_status." | tee -a "$FAILURE_LOG"
            exit 1
        fi

        exist_check=$(echo "$exist_check" | tr -d '[:space:]')
        
        if [[ "$exist_check" -eq 0 ]]; then
            echo "Error: Disk group $dg does not exist." | tee -a "$FAILURE_LOG"
            exit 1
        fi
        echo "Disk group $dg exists." | tee -a "$MASTER_LOG"
    else
        # JFS2 File System Existence Check
        if ! df -g "$dg" &>/dev/null; then
            echo "Error: Filesystem $dg does not exist." | tee -a "$FAILURE_LOG"
            exit 1
        fi
        echo "Filesystem $dg exists." | tee -a "$MASTER_LOG"
    fi
}

check_size() {
    local dg=$1
    local dg_name="'${dg#+}'"

    echo "Checking available space for $dg..." | tee -a "$MASTER_LOG"

    if [[ "$dg" == +* ]]; then
        # ASM Disk Group Available Space Check
        available_space=$(su - {{ grid_user }} -c "sqlplus -s / as sysdba" <<SQL | tee -a "$MASTER_LOG"
SET HEADING OFF
SET FEEDBACK OFF
SET PAGESIZE 0
SELECT ROUND(USABLE_FILE_MB / 1024, 2) FROM v\$asm_diskgroup WHERE name=UPPER($dg_name);
EXIT;
SQL
)
        sql_exit_status=$?
        if [[ $sql_exit_status -ne 0 ]]; then
            echo "Error: SQL command failed with exit status $sql_exit_status." | tee -a "$FAILURE_LOG"
            exit 1
        fi

        available_space=$(echo "$available_space" | tr -d '[:space:]')
    else
        # JFS2 File System Available Space Check
        available_space=$(df -g "$dg" | awk 'NR==2 {print $3}')
    fi

    echo "Available space in $dg: ${available_space}G" | tee -a "$MASTER_LOG"
    echo "Required space: ${db_size}G" | tee -a "$MASTER_LOG"

    available_space_int=$(echo "$available_space" | awk -F. '{print $1}')
    db_size_int=$(echo "$db_size" | awk -F. '{print $1}')

    if [ "$available_space_int" -ge "$db_size_int" ]; then
        echo "Sufficient space available in $dg." | tee -a "$MASTER_LOG"
    else
        echo "Error: Not enough space available in $dg. Required: ${db_size}G, Available: ${available_space}G" | tee -a "$FAILURE_LOG"
        exit 1
    fi
}

# Validate existence for all three
check_existence "$file_dest"
check_existence "$online_log_dest1"
check_existence "$db_recovery_file_dest"

# Validate available space only for "$file_dest"
check_size "$file_dest"

echo "All checks completed successfully." | tee -a "$MASTER_LOG"

# Check for failures and exit accordingly
if [[ -s "$FAILURE_LOG" ]]; then
    cat "$FAILURE_LOG"
    rm -f "$FAILURE_LOG"
    exit 1
fi

echo "Pre-checks passed for standby database!" | tee -a "$MASTER_LOG"
rm -f "$FAILURE_LOG"
touch "{{ done_dir }}/drprecheck.success"
exit 0