---
# Copyright (c) IBM Corporation 2021
# tasks file for oracle_install
- name: Run initialization tasks
  ansible.builtin.include_tasks: ../../dataguard_precheck/tasks/init.yml
  when: not init_done is defined

- name: Checking if Dataguard setup was already done
  ansible.builtin.stat:
    path: "{{ done_dir }}/dataguard.success"
  register: dataguarddone
  delegate_to: "{{ standby_host }}"
  run_once: true

- name: Set fact if Dataguard setup was done
  ansible.builtin.set_fact:
    dataguard_setup_done: "{{ dataguarddone.stat.exists | default(false) }}"
  run_once: true

- name: Exit if Dataguard setup was already done
  ansible.builtin.fail:
    msg: "Dataguard setup already done. Exiting."
  when: dataguard_setup_done
  run_once: true

- name: End play if Dataguard setup Task was done
  ansible.builtin.meta: end_play
  when: dataguard_setup_done
  run_once: true

- name: Copy DISKGROUP script from standby database
  ansible.builtin.template:
    src: ../../preconfig_standby/templates/diskgroup.sh
    dest: "{{ scripts_dir }}/diskgroup.sh"
    mode: '0755'
  when: 
      - inventory_hostname == standby_host 
      
- name: Fetch DISKGROUP from standby database
  ansible.builtin.shell: "{{ scripts_dir }}/diskgroup.sh"
  register: diskgroup_result
  changed_when: false
  when: 
      - inventory_hostname == standby_host 
     
- name: Set DISKGROUP as fact on standby database
  ansible.builtin.set_fact:
    primary_diskgroup: "{{ diskgroup_result.stdout | trim }}"
  when: 
      - inventory_hostname == standby_host  

- name: Fetch DISKGROUP fact from standby to primary
  ansible.builtin.set_fact:
    primary_diskgroup: "{{ hostvars[standby_host].primary_diskgroup }}"
  when: 
      - inventory_hostname == primary_host and hostvars[standby_host].primary_diskgroup is defined

- name: Checking if Primary pre configure was already done
  ansible.builtin.stat:
    path: "{{ done_dir }}/primary_preconfig.success"
  register: primarypreconfigdone
  when: inventory_hostname == primary_host

- name: Copy Dataguard Pre-config script for primary
  ansible.builtin.template:
    src: primary_preconfig.sh.j2
    dest: "{{ scripts_dir }}/primary_preconfig.sh"
    mode: '0755'
  vars:
    database_name: "primary"
    standby_diskgroup: "{{ primary_diskgroup }}"
  when: 
      - inventory_hostname == primary_host 
      - not primarypreconfigdone.stat.exists

- name: Execute Dataguard Pre-config script on primary
  ansible.builtin.shell: "{{ scripts_dir }}/primary_preconfig.sh"
  register: precheck_output
  failed_when: precheck_output.rc != 0
  changed_when: false
  when: 
      - inventory_hostname == primary_host 
      - not primarypreconfigdone.stat.exists

- name: Debug Pre-config Output for primary dataabse
  ansible.builtin.debug:
    msg: "{{ precheck_output.stdout_lines }}"
  when: 
      - inventory_hostname == primary_host 
      - not primarypreconfigdone.stat.exists









