---
# Copyright (c) IBM Corporation 2021
# tasks file for oracle_install
- name: Run initialization tasks
  ansible.builtin.include_tasks: ../../dataguard_precheck/tasks/init.yml
  when: not init_done is defined

- name: Checking if Dataguard setup was already done
  ansible.builtin.stat:
    path: "{{ done_dir }}/dataguard.success"
  register: dataguarddone
  when: inventory_hostname == standby_host

- name: Exit if Dataguard setup was already done
  ansible.builtin.fail:
    msg: "Dataguard setup already done. Exiting."
  when: 
      - dataguarddone.stat.exists
      - inventory_hostname == standby_host
  run_once: true

- name: End play if Dataguard setup Task was done
  ansible.builtin.meta: end_play
  when: dataguarddone.stat.exists
  run_once: true

# Precheck 24: Verify network connectivity between primary and standby
- name: Verify primary can ping standby host
  ansible.builtin.command: "ping -c 2 {{ standby_host }}"
  register: ping_primary_to_standby
  changed_when: false
  ignore_errors: true
  when: inventory_hostname == primary_host

- name: Fail if primary cannot reach standby
  ansible.builtin.fail:
    msg: "Primary server {{ primary_host }} cannot reach standby server {{ standby_host }}. Check network connectivity."
  when:
      - ping_primary_to_standby.rc | default(0) != 0 and ping_primary_to_standby is defined
      - inventory_hostname == primary_host

- name: Verify standby can ping primary host
  ansible.builtin.command: "ping -c 2 {{ primary_host }}"
  register: ping_standby_to_primary
  changed_when: false
  ignore_errors: true
  when: inventory_hostname == standby_host

- name: Fail if standby cannot reach primary
  ansible.builtin.fail:
    msg: "Standby server {{ standby_host }} cannot reach primary server {{ primary_host }}. Check network connectivity."
  when:
      - ping_standby_to_primary.rc | default(0) != 0 and ping_standby_to_primary is defined
      - inventory_hostname == standby_host

- name: Copy Dataguard Pre-check script for primary
  ansible.builtin.template:
    src: dataguard_precheck.sh.j2
    dest: "{{ scripts_dir }}/dataguard_precheck.sh"
    mode: '0755'
  vars:
    database_name: "primary"
    when: inventory_hostname == primary_host 

- name: Execute Dataguard Pre-check script on primary
  ansible.builtin.shell: "{{ scripts_dir }}/dataguard_precheck.sh"
  register: precheck_output
  failed_when: precheck_output.rc != 0
  changed_when: false
  when: inventory_hostname == primary_host 

- name: Debug Pre-check Output for primary dataabse
  ansible.builtin.debug:
    msg: "{{ precheck_output.stdout_lines }}"
  when: inventory_hostname == primary_host 

## check only from DB home 

- name: Get release patch details from site
  shell: "{{ databases.primary.grid_db_home }}/bin/crsctl query has releasepatch" 
  register: patch_info

- name: Set patch level and patches facts
  set_fact:
    patch_level: "{{ patch_info.stdout | regex_search('Oracle Clusterware release patch level is \\[(.*?)\\]', '\\1') }}"
    patches: "{{ patch_info.stdout | regex_search('complete list of patches \\[(.*?)\\]', '\\1') }}"

- name: Set standby patch details for comparison (on standby only)
  set_fact:
    standby_patch_level: "{{ patch_level }}"
    standby_patches: "{{ patches }}"
  when: inventory_hostname == standby_host 

- name: Set primary patch details for comparison (on primary only)
  set_fact:
    primary_patch_level: "{{ patch_level }}"
    primary_patches: "{{ patches }}"
  when: inventory_hostname == primary_host 

- name: Fail if patch levels or patches do not match between primary and standby
  fail:
    msg: "Patch levels or patches mismatch between primary and standby databases!"
  when:
    - hostvars[primary_host].primary_patch_level != hostvars[standby_host].standby_patch_level
    - hostvars[primary_host].primary_patches != hostvars[standby_host].standby_patches
